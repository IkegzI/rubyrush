args = ARGV[0]

def cls
  if Gem.win_platform?
    system('cls') # windows
  else
    system('reset') # linux
  end
end

def info_answers
  puts 'Если вы считаете, что ответов несколько - перечислити их через запятую.'
  puts
end

cls
name = (args || 'таинственный гость').capitalize

puts 'Добрый день, #{name}'
puts 'Предлагаю вам пройти тест на уровень логического мышления.'


questions = [
    "Некоторые улитки являются горами. Все горы любят кошек. Следовательно, все улитки любят кошек",
    "Все крокодилы могут летать. Все великаны являются крокодилами. Следовательно, все великаны могут летать",
    "Некоторые кочаны капусты являются паровозами. Некоторые паровозы играют на рояле.\nСледовательно, некоторые кочаны капусты играют",
    "Две рощи никогда не похожи друг на друга. Сосны и ели выглядят совершенно одинаково.\nСледовательно, сосны и ели не являются двумя рощами",
    "Никто не может стать президентом, если у него красный нос. У всех людей нос красный.\nСледовательно, никто не может быть президентом",
    "Все вороны собирают картины. Некоторые собиратели картин сидят в птичьей клетке.\nСледовательно, некоторые вороны сидят в птичьей клетке",
    "Только плохие люди обманывают или крадут. Екатерина — хорошая",
    "Все воробьи не умеют летать. У всех воробьев есть ноги",
    "Некоторые люди — европейцы. Европейцы — трёхноги",
    "Цветы — это зелёные животные. Цветы пьют водку",
    "Каждый квадрат круглый. Все квадраты красные",
    "Хорошие начальники падают с неба. Плохие начальники могут петь"
]

answers = {
    1 => ['1) правильно',
          '2) не правильно'],
    2 => ['1) правильно',
          '2) не правильно'],
    3 => ['1) правильно',
          '2) не правильно'],
    4 => ['1) правильно',
          '2) не правильно'],
    5 => ['1) правильно',
          '2) не правильно'],
    6 => ['1) правильно',
          '2) не правильно'],
    7 => ['1) Екатерина обманывает',
          '2) Екатерина крадет',
          '3) Екатерина не крадет',
          '4) Екатерина обманывает и крадет',
          '5) Екатерина не обманывает',
          '6) Все умозаключения не правильны'],
    8 => ['1) Воробьи без ног могут летать',
          '2) Некоторые воробьи не имеют ног',
          '3) Все воробьи, у которых есть ноги — не могут летать',
          '4) Воробьи не умеют летать, потому что у них есть ноги',
          '5) Воробьи не умеют летать, и у них нет ног'],
    9 => ['1) Воробьи без ног могут летать',
          '2) Некоторые воробьи не имеют ног',
          '3) Все воробьи, у которых есть ноги — не могут летать',
          '4) Воробьи не умеют летать, потому что у них есть ноги',
          '5) Воробьи не умеют летать, и у них нет ног'],
    10 => ['1) Воробьи без ног могут летать',
           '2) Некоторые воробьи не имеют ног',
           '3) Все воробьи, у которых есть ноги — не могут летать',
           '4) Воробьи не умеют летать, потому что у них есть ноги',
           '5) Воробьи не умеют летать, и у них нет ног'],
    11 => ['1) Екатерина обманывает',
           '2) Екатерина крадет',
           '3) Екатерина не крадет',
           '4) Екатерина обманывает и крадет',
           '5) Екатерина не обманывает',
           '6) Все умозаключения не правильны'],
    12 => ['1) Екатерина обманывает',
           '2) Екатерина крадет',
           '3) Екатерина не крадет',
           '4) Екатерина обманывает и крадет',
           '5) Екатерина не обманывает',
           '6) Все умозаключения не правильны']
}

answer_true = {
    1 => [2],
    2 => [1],
    3 => [2],
    4 => [1],
    5 => [1],
    6 => [2],
    7 => [6],
    8 => [3],
    9 => [1, 3, 4],
    10 => [3, 4],
    11 => [6],
    12 => [6]
}

question = 1

answers_user = {}
answer_summ = 0

for item in questions
  info_answers
  puts questions[question]
  puts answers[question]
  loop do
    answers_user[question] = (STDIN.gets.chomp.split(',')).map { |i| i.to_i }.sort.uniq
    break if answers[question].size >= answers_user[question][0]
    puts "ответ должен быть в диапазоне от 1 до #{answers[question].size}.\nПожалуйста повторите ввод."
  end
  if answer_true[question] == answers_user[question]
    answer_summ += 1
  end
  question += 1
  cls
end

puts "Спасибо, что прошли наш тест, уважаемый #{name}."
puts "Количества набранных вами баллов - #{answer_summ}\n"

case answer_summ
  when 0..2
    puts 'C логикой у вас очень слабо.'
  when 3..6
    puts 'Логика не отсутствует, но, наверное, имеет смысл ее потренировать.'
  when 7..10
    puts 'Логика не отсутствует, но, наверное, имеет смысл ее потренировать.'
  when 11..12
    puts 'Логика не отсутствует, но, наверное, имеет смысл ее потренировать.'
end








